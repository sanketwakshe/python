* Implicit Type Casting (Automatic conversion by Python)
a = 5   # Integer
b = 2.5 # Float
c = a + b  # Integer + Float = Float
print(c)  
print(type(c))  

Explicit Type Casting (Manual conversion by the programmer)
num = 10
num_float = float(num)
print(num_float)  # Output: 10.0
-------------------------------------------------------------
1] Operator 
An operator is a symbol that performs an operation on operands. 
2] Operand
An operand is the value or variable on which an operator performs the operation.
a = 10
b = 5
c = a + b
Here, + is the operator 
a and b are operands .
-----------------------------------------------------------------
Arithmetic Operators
+ (Addition) → a + b
- (Subtraction) → a - b
* (Multiplication) → a * b
/ (Division) → a / b
// (Floor Division) → a // b
% (Modulus) → a % b
** (Exponentiation) → a ** b
------------------------------------------------------------------
2. Comparison (Relational) Operators
== (Equal to) → a == b
!= (Not equal to) → a != b
> (Greater than) → a > b
< (Less than) → a < b
>= (Greater than or equal to) → a >= b
<= (Less than or equal to) → a <= b
-------------------------------------------------------------------
3. Logical Operators
and (Logical AND) → a and b
or (Logical OR) → a or b
not (Logical NOT) → not a
--------------------------------------------------------------------
4. Bitwise Operators
& (Bitwise AND) → a & b
| (Bitwise OR) → a | b
^ (Bitwise XOR) → a ^ b
~ (Bitwise NOT) → ~a
<< (Left Shift) → a << 2
>> (Right Shift) → a >> 2
---------------------------------------------------------------------
5. Assignment Operators
= (Assign) → a = 10
+= (Add and assign) → a += 5
-= (Subtract and assign) → a -= 5
*= (Multiply and assign) → a *= 5
/= (Divide and assign) → a /= 5
//= (Floor divide and assign) → a //= 5
%= (Modulus and assign) → a %= 5
**= (Exponentiate and assign) → a **= 5
&= (Bitwise AND and assign)
|= (Bitwise OR and assign)
^= (Bitwise XOR and assign)
<<= (Left shift and assign)
>>= (Right shift and assign)
---------------------------------------------------------------------
6. Identity Operators
is (True if both refer to the same object) → a is b
is not (True if they refer to different objects) → a is not b
7. Membership Operators
in (True if a value is in a sequence) → a in list
not in (True if a value is not in a sequence) → a not in list
---------------------------------------------------------------------
Condition: if-else
1] if condition:
    # Code to execute if condition is True
else:
    # Code to execute if condition is False
-----------------
2]  if-elif-else Statement
if condition1:
    # Code if condition1 is True
elif condition2:
    # Code if condition2 is True
else:
    # Code if all conditions are False
-----------------
3] Nested-if-else
m =35 
if m >= 35:
    print("y")
    if(m>=45): # one more condition add
        print("n")
else:
    print("pp")

